<launch>

    <!-- RUN mmros_wrapper for neural network -->
    <include file="$(find mmros_wrapper)/launch/mmros_wrapper_ckpt.launch"/>

    <!-- RUN crack localization  -->
    <node name="crack_localizer_node" pkg="mmros_wrapper" type="crack_localizer.py" output="screen" />

    <!-- RUN tf publisher -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="tf_cam_base" args="0 0 0 0 0 0  map camera_color_optical_frame" />

    <!-- RUN octomap -->
    <arg name="namespace"           default="$(env UAV_NAMESPACE)" />
    <!--arg name="map_frame_id"        default="/$(arg namespace)/map" />
    <arg name="base_link_frame_id"  default="/$(arg namespace)/base_link" /-->
    <arg name="map_frame_id"        default="map" />
    <arg name="base_link_frame_id"  default="camera_color_optical_frame" />
    <arg name="cloud_in"            default="/camera/depth_registered/points" />
        
    <node name="octomap_server" pkg="octomap_server" type="octomap_server_node" ns="$(arg namespace)">
        <param name="frame_id"          value="$(arg map_frame_id)"/>      
        <param name="base_frame_id"     value="$(arg base_link_frame_id)" />
        <remap from="cloud_in"  to="$(arg cloud_in)" />
    </node>   

</launch>